EXERCISE_PLANNING_PROMPT = """
너는 사용자의 자연어 질문을 분석해서 아래 형식의 JSON 형태로 "데이터 조회 계획"을 만든다.
이 계획은 PostgreSQL에서 데이터를 추출하기 위한 설계다. 실제 SQL은 작성하지 않는다.

아래는 사용할 수 있는 테이블 스키마이다:

TABLE_SCHEMA:
{table_schema}

TABLE_SCHEMA에 정의된 컬럼 중 id 는 모두 정수이다.

---

아래 JSON 형식에 따라 필요한 항목만 채워라:

{{
  "intent": "<사용자의 의도>",
  "table": "<기준 테이블>",
  "filters": {{
    "<column>": "<값>",
    ...
  }},
  "required_joins": [
    {{
      "from": "<table_name>",
      "to": "<table_name>",
      "on": "<join_key>"
    }}
  ],
  "aggregation": "<sum | count | avg | max | min | group_concat>",
  "group_by": ["<column1>", "<column2>"],
  "order_by": {{
    "field": "<정렬할 컬럼>",
    "direction": "asc | desc"
  }},
  "limit": <정수>,
  "output_fields": ["<table.column>", ...]
}}

주의사항:
- filters에는 항상 member_id를 포함해라.
- aggregation과 group_by는 통계 요청일 때만 사용한다.
- required_joins는 다른 테이블의 컬럼을 사용해야 할 때만 추가한다.
- 가능한 한 자세한 output_fields를 작성해라.
- 질문이 모호하면 최대한 일반적인 해석으로 처리하되, intent는 명확하게 작성해라.

---

질문:
"{message}"

member_id:
"{member_id}"

응답은 위 JSON 형태로만 하라. 설명, 주석 없이 JSON만 리턴하라.
    """

EXERCISE_PLANNING_PROMPT_2 = """
  너는 사용자의 자연어 발화 안에서 **여러 개의 작업 목적(intent)** 이 있는지 파악하고, 각각을 아래 JSON 형태로 **배열로 반환**한다.

  ---

  가능한 intent 종류:
  - 저장: 데이터를 저장하고자 할 때
  - 조회: 데이터를 조회하고자 할 때
  - 추천: 추천을 받고자 할 때
  - 분석: 과거 데이터를 분석하고자 할 때
  - 질문: 어떤 정보를 묻고자 할 때
  - 기타: 위에 속하지 않는 경우

  ---

  JSON 출력 형식:

  [
    {{
      "intent": "<저장|조회|추천|질문|기타>",
      "action": "<실행하고자 하는 일>",
      "table": "<대상 테이블 (해당되는 경우)>",
      "data": {{ ... }},
      "filters": {{ ... }},
      "target_exercise": "...",  // 해당 시 사용
      "symptom": "...",          // 해당 시 사용
      ...
    }},
    ...
  ]

  ---

  주의:
  - intent가 여러 개일 경우, JSON 객체를 배열로 나눠 각각 작성
  - member_id는 data나 filter에 반드시 포함
  - 질문이 모호하더라도 추론해서 intent를 나눠라
  - 설명 없이 JSON만 리턴

  ---

  사용자 발화:
  "{message}"

  member_id:
  "{member_id}"

"""

EXERCISE_PLANNING_PROMPT_3 = """
너는 지능적인 AI 플래너다. 사용자의 자연어 질문을 이해하고, 아래 제공된 정보들을 바탕으로 **질문을 해결하기 위한 단계별 작업 계획(JSON 배열)** 을 수립하라.

---

[1] PostgreSQL 테이블 스키마:

{table_schema}

[2] 사용 가능한 Tool 목록:

{tool_descriptions}

각 tool은 특정 기능을 수행하는 도구이며, 다음과 같은 형식으로 호출한다:

- "tool": 사용할 tool 이름 (없으면 null 또는 생략 가능)
- "input": 해당 tool에 전달할 입력값
- "description": 이 단계의 목적과 이유

단, tool 없이도 LLM의 지식이나 앞선 단계의 정보만으로 답할 수 있다면 `"tool"`은 생략하거나 `null`로 남겨둘 수 있다.

---

[3] 사용자 질문:
"{message}"

[4] 사용자 ID:
"{member_id}"

---

[5] 아래의 모든 조건에 반드시 따를 것:

1. **절대로 추측 금지**:
   - 모든 값은 명확히 확보된 정보만 사용한다.
   - 테이블에 없는 값이나, 앞선 단계에서 조회되지 않은 값은 절대로 사용하지 않는다.
   - 필요한 값이 없다면, **반드시 그 값을 먼저 조회하는 단계**를 작성한다.

2. **계획은 단계별로 논리적인 순서를 따라야 하며**, 각 단계는 앞선 단계의 결과에만 의존할 수 있다.
  - 이전 단계에서 조회하지 않은 값을 추측하거나, 먼저 사용하지 않는다.
  - 계획 상의 논리적 순서가 어긋나는 경우는 오류로 간주된다.

3. **DB 조회 시**:
   - 모든 값은 명확히 확보된 정보만 사용한다.
   - foreign_keys 정보에 따라 활용해야하는 경우엔 foreign key 관계를 통해 연결된 테이블에서 해당 값을 조회한 후, 그 값을 기반으로 다음 조회를 수행해야 한다.
   - id 값은 모두 숫자이며 절대로 직접 추측하거나 임의로 작성하지 마라.
   - 어떤 테이블에서 어떤 조건으로 어떤 데이터를 조회하는지 명확히 작성한다.

4. **Tool 사용 여부는 적절히 판단하되**, 툴 없이도 판단 가능한 단계는 "tool": null 로 둘 수 있다.

5. **출력은 반드시 유효한 JSON 배열**이어야 하며, 
   - 절대로 **주석 (`//`, `/* */`)을 포함하지 않는다.*
   - JSON 포맷 오류가 있는 경우 실행되지 않는다.

6. 마지막 단계는 항상 전체 정보를 바탕으로 종합적인 답변을 생성하는 LLM 호출 단계여야 한다.
"""