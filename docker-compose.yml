version: "3.8"

services:
  redis:
    image: redis:7
    container_name: redis-server
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - ai-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - esconfig:/usr/share/elasticsearch/config
    networks:
      - ai-network

kibana:
  image: docker.elastic.co/kibana/kibana:8.12.1
  container_name: kibana
  restart: unless-stopped
  ports:
    - "5601:5601"
  env_file:
    - .env
  environment:
    - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
    - ELASTICSEARCH_SERVICEACCOUNTTOKEN=${ELASTICSEARCH_SERVICEACCOUNTTOKEN}
  depends_on:
    - elasticsearch
  networks:
    - ai-network

  fastapi:
    build:
      context: .
    container_name: fastapi-ai
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - elasticsearch
      - kibana
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - ai-network

networks:
  ai-network:
    driver: bridge

volumes:
  esdata:
  esconfig:
